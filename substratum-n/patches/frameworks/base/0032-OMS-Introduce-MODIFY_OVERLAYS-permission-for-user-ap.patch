From f96b86af8309fa6b664ee42c20f770108381aa6e Mon Sep 17 00:00:00 2001
From: bigrushdog <randall.rushing@gmail.com>
Date: Mon, 19 Dec 2016 04:33:31 -0800
Subject: [PATCH 32/41] OMS: Introduce MODIFY_OVERLAYS permission for user apps

This permission will grant the app read and write permissions
to access OverlayManagerService. If caller does not posess
this permissions, OMS falls back to default permission checks

Change-Id: Ib6b10b516577f338aee31e759bfd16278f902c20
(cherry picked from commit 8e59c96513c573a4912492c005b076cb2a972332)
---
 core/res/AndroidManifest.xml                       |  6 +++++
 core/res/res/values/strings.xml                    |  5 +++++
 .../android/server/om/OverlayManagerService.java   | 26 +++++++++++++++-------
 3 files changed, 29 insertions(+), 8 deletions(-)

diff --git a/core/res/AndroidManifest.xml b/core/res/AndroidManifest.xml
index 68cc51d..580bea2 100644
--- a/core/res/AndroidManifest.xml
+++ b/core/res/AndroidManifest.xml
@@ -3136,6 +3136,12 @@
     <permission android:name="android.permission.SUBSTITUTE_NOTIFICATION_APP_NAME"
                 android:protectionLevel="signature|privileged" />
 
+    <!-- Allows an application to make calls to OverlayManagerService.-->
+    <permission android:name="android.permission.MODIFY_OVERLAYS"
+        android:label="@string/permlab_modifyOverlays"
+        android:description="@string/permdesc_modifyOverlays"
+        android:protectionLevel="normal" />
+
     <application android:process="system"
                  android:persistent="true"
                  android:hasCode="false"
diff --git a/core/res/res/values/strings.xml b/core/res/res/values/strings.xml
index 92146b5..06dfe1b 100755
--- a/core/res/res/values/strings.xml
+++ b/core/res/res/values/strings.xml
@@ -1421,6 +1421,11 @@
     <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
     <string name="permdesc_access_notification_policy">Allows the app to read and write Do Not Disturb configuration.</string>
 
+    <!-- Title of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permlab_modifyOverlays">modify theme overlays</string>
+    <!-- Description of an application permission, listed so the user can choose whether they want to allow the application to do this. -->
+    <string name="permdesc_modifyOverlays">Allows the app to make modifications to theme overlays using OverlayManagerService</string>
+
     <!-- Policy administration -->
 
     <!-- Title of policy access to limiting the user's password choices -->
diff --git a/services/core/java/com/android/server/om/OverlayManagerService.java b/services/core/java/com/android/server/om/OverlayManagerService.java
index deb9046..e205ce1 100644
--- a/services/core/java/com/android/server/om/OverlayManagerService.java
+++ b/services/core/java/com/android/server/om/OverlayManagerService.java
@@ -36,6 +36,7 @@ import android.content.om.IOverlayManager;
 import android.content.om.OverlayInfo;
 import android.content.pm.IPackageManager;
 import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
 import android.content.pm.PackageManagerInternal;
 import android.content.pm.UserInfo;
 import android.net.Uri;
@@ -114,7 +115,8 @@ import java.util.concurrent.atomic.AtomicBoolean;
  *     the caller runs as, or if the caller holds the
  *     INTERACT_ACROSS_USERS_FULL permission. Write-access is granted if the
  *     caller is granted read-access and additionaly holds the
- *     CHANGE_CONFIGURATION permission.</li>
+ *     CHANGE_CONFIGURATION permission. Additionally, read and write access
+ *     is granted by the MODIFY_OVERLAYS permission.</li>
  * </ul>
  *
  * <p>The AIDL interface works with String package names, int user IDs, and
@@ -549,19 +551,24 @@ public final class OverlayManagerService extends SystemService {
         /**
          * Ensure that the caller has permission to interact with the given userId.
          * If the calling user is not the same as the provided user, the caller needs
-         * to hold the INTERACT_ACROSS_USERS_FULL permission (or be system uid or
+         * to hold the INTERACT_ACROSS_USERS_FULL permission or MODIFY_OVERLAYS permission (or be system uid or
          * root).
          *
          * @param userId the user to interact with
          * @param message message for any SecurityException
          */
         private int handleIncomingUser(final int userId, @NonNull final String message) {
-            return ActivityManager.handleIncomingUser(Binder.getCallingPid(),
-                    Binder.getCallingUid(), userId, false, true, message, null);
+            if (getContext().checkCallingOrSelfPermission(
+                    android.Manifest.permission.MODIFY_OVERLAYS) == PackageManager.PERMISSION_GRANTED) {
+                return userId;
+            } else {
+                return ActivityManager.handleIncomingUser(Binder.getCallingPid(),
+                        Binder.getCallingUid(), userId, false, true, message, null);
+            }
         }
 
         /**
-         * Enforce that the caller holds the CHANGE_CONFIGURATION permission (or is
+         * Enforce that the caller holds the CHANGE_CONFIGURATION permission or MODIFY_OVERLAYS permission (or is
          * system or root).
          *
          * @param message used as message if SecurityException is thrown
@@ -570,9 +577,12 @@ public final class OverlayManagerService extends SystemService {
         private void enforceChangeConfigurationPermission(@NonNull final String message) {
             final int callingUid = Binder.getCallingUid();
 
-            if (callingUid != Process.SYSTEM_UID && callingUid != 0) {
-                getContext().enforceCallingOrSelfPermission(
-                        android.Manifest.permission.CHANGE_CONFIGURATION, message);
+            if (getContext().checkCallingOrSelfPermission(
+                    android.Manifest.permission.MODIFY_OVERLAYS) != PackageManager.PERMISSION_GRANTED) {
+                if (callingUid != Process.SYSTEM_UID && callingUid != 0) {
+                    getContext().enforceCallingOrSelfPermission(
+                            android.Manifest.permission.CHANGE_CONFIGURATION, message);
+                }
             }
         }
 
-- 
2.7.4


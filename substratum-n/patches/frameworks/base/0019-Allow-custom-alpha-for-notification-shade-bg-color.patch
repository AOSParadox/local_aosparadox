From ebdda0b1d503830c2fb61201e3b37d03d9fb8458 Mon Sep 17 00:00:00 2001
From: Simao Gomes Viana <xdevs23@outlook.com>
Date: Fri, 25 Nov 2016 20:50:29 +0100
Subject: [PATCH 19/41] Allow custom alpha for notification shade bg color

Change-Id: If621df83d994feae0448a734408ba85ac8329325
---
 .../stack/NotificationStackScrollLayout.java       | 40 +++++++++++++++-------
 1 file changed, 27 insertions(+), 13 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
index a6fe438..5cf0e0a 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/stack/NotificationStackScrollLayout.java
@@ -430,19 +430,33 @@ public class NotificationStackScrollLayout extends ViewGroup
     }
 
     private void updateBackgroundDimming() {
-        float alpha = BACKGROUND_ALPHA_DIMMED + (1 - BACKGROUND_ALPHA_DIMMED) * (1.0f - mDimAmount);
-        alpha *= mBackgroundFadeAmount;
-        // We need to manually blend in the background color
-        int scrimColor = mScrimController.getScrimBehindColor();
-        // SRC_OVER blending Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc
-        float alphaInv = 1 - alpha;
-        int color = Color.argb((int) (alpha * 255 + alphaInv * Color.alpha(scrimColor)),
-                (int) (mBackgroundFadeAmount * Color.red(mBgColor)
-                        + alphaInv * Color.red(scrimColor)),
-                (int) (mBackgroundFadeAmount * Color.green(mBgColor)
-                        + alphaInv * Color.green(scrimColor)),
-                (int) (mBackgroundFadeAmount * Color.blue(mBgColor)
-                        + alphaInv * Color.blue(scrimColor)));
+        int color;
+        if(Color.alpha(mBgColor) == 255) {
+            float alpha = BACKGROUND_ALPHA_DIMMED +
+                    (1 - BACKGROUND_ALPHA_DIMMED) * (1.0f - mDimAmount);
+            alpha *= mBackgroundFadeAmount;
+            // We need to manually blend in the background color
+            int scrimColor = mScrimController.getScrimBehindColor();
+            // SRC_OVER blending Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc
+            float alphaInv = 1 - alpha;
+            color = Color.argb(
+                    (int) (alpha * 255 + alphaInv * Color.alpha(scrimColor)),
+                    (int) (mBackgroundFadeAmount * Color.red(mBgColor)
+                            + alphaInv * Color.red(scrimColor)),
+                    (int) (mBackgroundFadeAmount * Color.green(mBgColor)
+                            + alphaInv * Color.green(scrimColor)),
+                    (int) (mBackgroundFadeAmount * Color.blue(mBgColor)
+                            + alphaInv * Color.blue(scrimColor)));
+        } else {
+            int a = Color.alpha(mBgColor) +
+                Color.alpha(mScrimController.getScrimBehindColor());
+            if(a > 255) a = 255;
+            else if(a < 0) /* shouldn't happen */ a = 0;
+            color = Color.argb(
+                a,
+                Color.red(mBgColor), Color.green(mBgColor), Color.blue(mBgColor)
+            );
+        }
         mBackgroundPaint.setColor(color);
         invalidate();
     }
-- 
2.7.4

